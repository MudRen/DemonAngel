名称：
	add_action - 把区域函式 (local function) 连结玩家的命令动词 
		     (command verb)。
语法：
	void add_action( string | function fun, string | string array cmd );
	void add_action( string | function fun, string | string array cmd, 
		int flag );

	无回传值 add_action( 字串 或 函式指标 函式, 字串 或 字串 阵列 命令 );
	无回传值 add_action( 字串 或 函式指标 函式, 字串 或 字串 阵列 命令, 
		整数 旗标 );
用法：
	本函式仅在不定义 NO_ADD_ACTION 时生效。

	设定玩家输入命令 cmd 时，呼叫函式 fun。〈该命令的动词是以第一个空白
	字元之前的所有字元为准，除非该动词不需要空白字元；见下文〉

	如果 cmd 是一个阵列，则阵列中任何的命令都会呼叫同一个函式。fun 可以
	是一个字串，这个字串是该物件加入命令的函式名称、也可以是一个函式指
	标。

	使用者输入的一行命令中，命令后面的内容会以字串型态传入该命令所呼叫
	的函式。如果命令错误必须传回 0，正确传回 1。如果传回 1，不会作进一
	步的语法分析 (parsing)。如果传回的是 0，会检查其他的命令〈可能是不
	同物件所加入的同一个命令〉。如果找不到任何命令，就对使用者送出预设
	的错误讯息〈传统上是“什么？”，不过可以参考 notify_fail()〉。

	如果一个函式可以被多个命令呼叫，可用 query_verb() 分辨到底使用了哪
	一个命令。

	注意：add_action() 所加入的命令不是广域的，它只对 this_user() 增加
	命令，而使用 add_action() 增加命令的物件必须要在使用者“附近”。

	因为使用者走到一个物件“附近”时，会呼叫该物件的 init()，所以这时候
	加上命令比较方便。使用者走开之后，就会删除该物件加入的命令〈或是该
	物件远离了使用者之后〉。

	如果参数 flag 是 1，只要使用者输入命令前面开头的几个字元 (leading 
	characters) 符合命令 cmd 即可，而完整的命令 (entire verb) 会由 
	query_verb() 传回。如果参数是 2，结果同前，但是 query_verb() 只传回 
	cmd 后面的字元 (characters following 'cmd')。
参考：
	query_verb, remove_action, init
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻译：
	spock@muds.net		2000.Jun.25.	v22 版
