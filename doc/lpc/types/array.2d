LPC 可以做到二元阵列, 这很简单. 只要把它们当作一个阵列的阵列即可. 
举例来说:
 
   a = allocate(10);
   a[0] = allocate(10);
   a[1] = allocate(10);
   ...以此类推...
 
然后您可以用以下的方式引用 (reference) 阵列 0 , 元素 0 :

   a[0][0]

您不能宣告 (declare)  一个超过一元的阵列 (如果您有形态检查 (type checking)
, 而使用 *  形态的符号) , 但是您还是可以有一个一元以上的阵列. 如果您有形
态检查, 您可能会把阵列宣告成混合 (mixed)  形态.
 
可以使用以下这种方法:
 
   mixed a;
   a = ({ ({ 1, 2, 3 }), ({ 1, 2, 3 }) });
 
在上面的这个范例中, a[0] 是 ({ 1, 2, 3 }), 而 a[0][2] 是 3.

或这种方法:
 
  mixed a;  
  a = ({ 0, 0, 0, 0 });  /* 设定阵列大小为 4 */
  a[0] = ({ 1, 2, 3 });
  a[1] = ({ 1, 2, 3 });
  ...以此类推...
 
作者:	John Price a.k.a. Raistlin

翻译:	Spock @ FF	97.Aug.10.
