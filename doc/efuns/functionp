名称：
	functionp - 判断指定的变数是否为一个函式指标 (function pointer)。
语法：
	int functionp( mixed arg );

	整数 functionp( 混合 参数 );
用法：
	如果“arg”是一个函式指标则传回非零值 (nonzero)，不是则传回 0。
	函式指标是一种“函式”(function) 型态的变数，在文件中有其说明。
	以下是范例：

	f = (: call_other, obj, func :);

	传回值指示出函式指标的型态，而这些传回值的意义定义在驱动程式的 
	“include/function.h”标头档中。

	FP_LOCAL      -	lfun pointer	〈区域函式指标〉
	FP_EFUN       -	efun pointer	〈外部函式指标〉
	FP_SIMUL      - simul pointer	〈模拟外部函式指标〉
	FP_FUNCTIONAL - functional	〈功能函式指标〉

	这些值是位元值 (bit value)；以下是可能同时加上的旗标：

	FP_HAS_ARGUMENTS	- 定义包括参数
	FP_OWNER_DESTED		- 本函式指标的拥有者已被摧毁
	FP_NOT_BINDABLE		- 本函式指标无法再次连结 (bind)

	测试一个函式指标变数是否为外部函式指标：

	if (functionp(f) & FP_EFUN) ...

	测试是否为外部函式或模拟外部函式：

	if (functionp(f) & (FP_EFUN | FP_SIMUL)) ...

	试着呼叫函式：

	if (functionp(f) & FP_OWNER_DESTED) {
		if (functionp(f) & FP_NOT_BINDABLE)
		error("函式无法再次连结。\n");
		f = bind(f, this_object());
	}
	evaluate(f);
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻译：
	spock@muds.net		2000.Aug.23.	v22 版
