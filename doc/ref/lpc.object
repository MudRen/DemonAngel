
发信人: jinna@phoenix (吉娜), 信区: mud
标  题: LPC 物件超短篇

* 什么是物件?

    一个物件包括函数(正式称呼是"方法")跟那些函数要处理的资料(变数).
    处理资料的唯一途径就是透过定义在该物件上的函数, 也就是说, 物件
    把处理资料的方法跟资料本身包装起来.

    一个单一的物件在 mud 中独立的, 也许是一个事件, 一个生物, 一个房间,
    一个武器, 一张纸等等. 甚至你自己就是一个物件, 只是在 mud 里称之为
    "动作"物件, 也就是可以下命令(产生动作)的物件, 用来跟其他物件有所区
    别, 这跟不是玩家控制的生物不一样. 每个物件都是一个用 LPC 写成的档
    案, 该档描述了该如何让驱动程式沟通, 也描述了在 mud 的作用.

    物件在整个泥巴中会占有记忆体, 至于所占的多寡则端视定义在该物件上的
    变数多寡, 以及函数等等因素而有不同. 通常驱动程式会在需要载入物件时
    才载入它, 没用到时就不会载入, 而载入的时机则可能不一样, 大致说来,
    当玩家 "碰" 到物件时就会载入, 有些是系统必要自动载入的. 至于记忆体
    的控制, 有各种选项让发展程式的人设定, 通常都定义在 options.h 中,请
    自行参考该档的说明.

    物件所占用的空间的释放则可以由系统自动执行, 或由程式发展者控制. 对
    于自动部份, 驱动程式会定时呼叫定义在物件上的 clean_up() 函数, 当传
    回 1 时就清除, 如果你有某些物件不想被清掉, 请自行定义此函数, 并适 
    当的传回 0. 手动部份, 则可以由 destruct() 函数控制, 请自行研读该函
    数的说明.

--
    本份文件由 wade@Fantasy.Space 提供
    本文件内容也许有错漏的地方, 欢迎指正批评
    欢迎流通本文件

