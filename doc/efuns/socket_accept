名称：
	socket_accept - 接受一个 socket 的连线 (connection)。
语法：
	int socket_accept( int s, string | function read_callback, 
		string | function write_callback );

	整数 socket_accept( 整数 s, 字串 或 函式指标 读取回呼, 
		字串 或 函式指标 写入回呼 );
用法：
	本函式仅在编译时定义 PACKAGE_SOCKETS 才有效。

	参数 s 是一个已用 socket_create() 建立、用 socket_bind() 指定了一个
	位址、并且正倾听 (listen) 在 socket_listen() 之后连接的 socket。
	socket_accept() 从未处理 (pending) 的连接序列 (queue) 中选取第一个
	连接，建立一个和 s 相同属性的新 socket 并且配置一个新的档案描述值 
	( file descriptor) 给它。如果在序列中没有未处理的连接，
	socket_accept() 会传回如后面会提到的错误值。这个被接受的 socket 将
	被用来从相连的另一端读写资料；它不能用来接受别的连接。原先的 socket 
	s 则保持开启以接受未来的连接。

	read_callback 这个参数是给驱动程式在一个新的 socket（不是正要接受的 
	socket）接收资料时，所呼叫的函式名称或函式指标。
	
	这个读取回呼函式 (read callback) 应该是下列格式：

	void read_callback(int fd)

	这里的 fd 是准备接收资料的 socket。

	write_callback 这个参数是给驱动程式在新的 socket（不是正要接受的 
	socket）准备好写入时，呼叫的函式名称。这个写入回呼函式 (write 
	callback) 应该是下列格式：

	void write_callback(int fd)

	这里的 fd 是准备好写入的 socket。

	注意：如果新 socket 不正常关闭，譬如和 socket_close() 的呼叫结果不
	同的话，则会呼叫正要接受的 socket（不是新的 socket）的 
	close_callback。这个关闭回呼函式 (close callback) 应该是如下格式：

	void close_callback(int fd)

	这里的 fd 是已关闭的 socket。

	socket_accept() 在成功时会传回一个对于已接受 socket 的非负数描述值
	。失败时，它传回一个负值。socket_error() 可以用来得到这个错误码的文
	字叙述。

	错误值──以下定义在 socket_err.h 中：

	EEFDRANGE	描述值超出范围。
	EEBADF		无效的描述值。
	EESECURITY	企图违反安全。
	EEMODENOTSUPP	不支援此 socket 型态。
	EENOTLISTN	socket 不在倾听中。
	EEWOULDBLOCK	操作将停滞(block)。
	EEINTR		中断的系统呼叫。
	EEACCEPT	接受时的问题。
	EENOSOCKS	没有多余的 efun sockets。
参考：
	socket_bind, socket_connect, socket_create, socket_listen
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
原译：
	Kenny@Broken.History	97.Jul.26
校订：
	spock@muds.net		2000.Aug.27.	v22 版
