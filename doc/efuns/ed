名称：
	ed - 编辑一个档案。
语法：
	void ed( string file, string exit_fn, int restricted );
	void ed( string file, string write_fn, string exit_fn, int restricted );

	无传回值 ed( 字串 file, 字串 exit_fn, 整数 restricted );
	无传回值 ed( 字串 档案, 字串 写入函式, 字串 离开函式, 整数 限制 );
用法：
	这个函式只有在定义了 OLD_ED 之后有效。

	这是个有趣的函式。它会启动一个内部的文书编辑程式来编辑一个指定的档
	案。这个编辑程式与 UNIX 的 ed 程式几乎相容。当你进入编辑程式后，可
	以输入 h 阅读说明。

	“write_fn”函式让 mudlib 控制档案的写入保护和档案的修改纪录。当编
	辑程式写入一个档案时，驱动程式 (driver)	会呼叫 write_fn 两次。第一
	次呼叫在写入档案之前── flag 旗标为 0。如果 write_fn 传回 1，就继
	续写入档案，传回其他值则放弃写入。第二次呼叫时，是在写完档案之后，
	此时的 flag 旗标为非零值。
	被呼叫的函式必须符合以下的格式：

	int write_fn( string fname, int flag )

	离开编辑程式时，驱动程式会呼叫“exit_fn”函式。此函式可以让 mudlib 
	清除。这个函式要符合以下的格式：

	void exit_fn()

	而可以选择的“restricted”旗标则限制编辑程式的功能。像是：插入一个
	档案、以另一个名字储存档案。
参考：
	regexp, valid_read, valid_write, get_save_file_name
作者：
	Tim Hollebeek  Beek@ZorkMUD, Lima Bean, IdeaExchange, and elsewhere
翻译：
	spock@muds.net		2000.Jun.25.	v22 版
